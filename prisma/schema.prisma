// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                 Int       @id @default(autoincrement())
    compoundId         String    @unique @map(name: "compound_id")
    userId             Int       @map(name: "user_id")
    providerType       String    @map(name: "provider_type")
    providerId         String    @map(name: "provider_id")
    providerAccountId  String    @map(name: "provider_account_id")
    refreshToken       String?   @map(name: "refresh_token")
    accessToken        String?   @map(name: "access_token")
    accessTokenExpires DateTime? @map(name: "access_token_expires")
    createdAt          DateTime  @default(now()) @map(name: "created_at")
    updatedAt          DateTime  @default(now()) @map(name: "updated_at")

    @@index([providerAccountId], name: "providerAccountId")
    @@index([providerId], name: "providerId")
    @@index([userId], name: "userId")
    @@map(name: "accounts")
}

model Session {
    id           Int      @id @default(autoincrement())
    userId       Int      @map(name: "user_id")
    expires      DateTime
    sessionToken String   @unique @map(name: "session_token")
    accessToken  String   @unique @map(name: "access_token")
    createdAt    DateTime @default(now()) @map(name: "created_at")
    updatedAt    DateTime @default(now()) @map(name: "updated_at")

    @@map(name: "sessions")
}

model User {
    id            Int       @id @default(autoincrement())
    name          String?
    email         String?   @unique
    emailVerified DateTime? @map(name: "email_verified")
    image         String?
    createdAt     DateTime  @default(now()) @map(name: "created_at")
    updatedAt     DateTime  @default(now()) @map(name: "updated_at")
    admin         Boolean   @default(false)

    @@map(name: "users")
}

model VerificationRequest {
    id         Int      @id @default(autoincrement())
    identifier String
    token      String   @unique
    expires    DateTime
    createdAt  DateTime @default(now()) @map(name: "created_at")
    updatedAt  DateTime @default(now()) @map(name: "updated_at")

    @@map(name: "verification_requests")
}

model Category {
    id        Int       @id @default(autoincrement())
    createdAt DateTime  @default(now()) @map(name: "created_at")
    updatedAt DateTime  @default(now()) @map(name: "updated_at")
    label     String    @unique
    color     String?   @default("f1f1f1")
    listings  Listing[]

    @@map(name: "categories")
}

model Listing {
    id                Int       @id @default(autoincrement())
    createdAt         DateTime  @default(now()) @map(name: "created_at")
    updatedAt         DateTime  @default(now()) @map(name: "updated_at")
    title             String
    category          Category? @relation(fields: [categoryId], references: [id])
    categoryId        Int?
    website           String?
    description       String?
    facebook          String?
    twitter           String?
    instagram         String?
    email             String?
    notes             String?
    seekingVolunteers Boolean?  @map(name: "seeking_volunteers")
    inactive          Boolean   @default(false)

    @@map(name: "listings")
}

model EditPermission {
    id                 Int      @id @default(autoincrement())
    createdAt          DateTime @default(now()) @map(name: "created_at")
    updatedAt          DateTime @default(now()) @map(name: "updated_at")
    userId             Int
    listingId          Int
    invitationAccepted Boolean  @default(false)

    @@map(name: "edit_permissions")
}
